35250/2
evtools::install_github('yihui/tinytex')
devtools::install_github('yihui/tinytex')
devtools::install_github("rmarkdown")
install.packages("rmarkdown")
install.packages("rmarkdown")
# 1. Plot a network graph
#The first step is to read the list of edges and nodes in this network:
EL = read.csv ("https://raw.githubusercontent.com/PABalland/ON/master/lesmis-el.csv")
head(EL)
NL = read.csv ("https://raw.githubusercontent.com/PABalland/ON/master/lesmis-nl.csv")
head(NL)
#install.packages("igraph")
library (igraph)
g <- graph_from_data_frame(d=EL, vertices=NL, directed=FALSE)
plot (g)
# D3 network (interactive)
EL2 = EL[, 1:2]
head(EL2)
library (networkD3)
simpleNetwork(EL2)
# library(devtools)
# devtools::install_github("PABalland/EconGeo", force = T)
library (EconGeo)
# Import the data (read the csv file)
M = read.csv ("https://paballand.github.io/teaching/ids/msa.sub.cat.pat.count.csv")
# Subset the data by keeping the decade 2000 only
M2000 = subset (M, dec == 2000)
# Keep only the variables "Cbsa.Name", "NBER.Sub.Cat", "pat.count" for this decade
M2000 = M2000[, c("Cbsa.Name", "NBER.Sub.Cat", "pat.count")]
# Transform the data into an adjacency matrix (using "get.matrix")
M2000 = get.matrix (M2000)
# Compute the co-occurrences of technologies (co.occurrence)
c = co.occurrence (t(M2000))
# Compute relatedness between technologies and make the matrix binary
r = relatedness (c)
r
EL = get.list (r)
View(EL)
head(NL)
# plot
g = graph_from_adjacency_matrix(r, weighted=TRUE, mode="undirected", diag=FALSE)
plot (g)
head(M)
# Subset the data by keeping the decade 2000 only
M2000 = subset (M, dec == 2000)
# Keep only the variables "Cbsa.Name", "NBER.Sub.Cat", "pat.count" for this decade
M2000 = M2000[, c("Cbsa.Name", "NBER.Sub.Cat.Name", "pat.count")]
# Transform the data into an adjacency matrix (using "get.matrix")
M2000 = get.matrix (M2000)
# Compute the co-occurrences of technologies (co.occurrence)
c = co.occurrence (t(M2000))
# Compute relatedness between technologies and make the matrix binary
r = relatedness (c)
# plot
g = graph_from_adjacency_matrix(r, weighted=TRUE, mode="undirected", diag=FALSE)
plot (g)
r[r<1] = 0
r[r>1] = 1
g = graph_from_adjacency_matrix(r, weighted=TRUE, mode="undirected", diag=FALSE)
plot (g)
# Compute the binary version of the relative advantage of a
# all cities in all technologies (RCA)
rca = RCA(M2000, binary = T)
# 9. Compute relatedness density
rd = relatedness.density(rca, r)
View(rd)
library('rvest')
#Specifying the url for desired website to be scraped
url <- 'http://www.imdb.com/search/title?count=100&release_date=2016,2016&title_type=feature'
#Reading the HTML code from the website
webpage <- read_html(url)
webpage
#Specifying the url for desired website to be scraped
url <- 'https://deymeaufildesrues.wordpress.com/les-deymois-racontent/les-cathares-ques-aco/'
#Reading the HTML code from the website
read_html(url)
#Reading the HTML code from the website
webpage = read_html(url)
View(webpage)
library(httr)
#GET HTML page and transfer it to tables
rlo <- httr::GET("http://baseballaustria.com/regionalliga-ost/")
rlo
rlo <- xml2::read_html(rlo)
rlo
#GET HTML page and transfer it to tables
rlo <- httr::GET("http://baseballaustria.com/regionalliga-ost/")
rlo <- xml2::read_html(rlo)
#read out "table node"
schedule <- rvest::html_nodes(rlo, css = "table")[2]
#Get the raw schedule
schedule <- rvest::html_table(schedule)
schedule
rlo
#Specifying the url for desired website to be scraped
url <- 'https://deymeaufildesrues.wordpress.com/les-deymois-racontent/les-cathares-ques-aco/'
#Reading the HTML code from the website
webpage = read_html(url)
View(webpage)
url <- 'https://deymeaufildesrues.wordpress.com/les-deymois-racontent/les-cathares-ques-aco/'
#Reading the HTML code from the website
webpage = read_html(url)
title_data_html <- html_nodes(webpage,'entry-content')
View(title_data_html)
View(webpage)
xml_child(webpage, 2)
tolower("G06F - ELECTRIC DIGITAL DATA PROCESSING")
tolower("H04L - TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION")
setwd("D:/Dropbox/2-private/Chris-Balland.github.io")
setwd("D:/Dropbox/2-private/Chris-Balland.github.io")
source("accueil.Rmd")
rmarkdown::render('accueil.Rmd')
setwd("D:/Dropbox/2-private/Chris-Balland.github.io")
library(rmarkdown)
rmarkdown::render('accueil.Rmd')
rmarkdown::render("accueil.Rmd", "html_document")
rmarkdown::render("les-cathares.Rmd", "html_document")
render("les-cathares.Rmd", html_document(toc = TRUE, toc_depth = 2))
setwd("D:/Dropbox/2-private/Chris-Balland.github.io")
library(rmarkdown)
rmarkdown::render("accueil.Rmd")
rmarkdown::render("accueil.Rmd")
rmarkdown::render("accueil.Rmd")
